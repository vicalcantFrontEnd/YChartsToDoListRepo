var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.82,1,0.82]],["body/components/AppComponent.html",[0,0.748,1,0.871,2,1.554,3,0.442,4,0.351,5,0.936,6,0.936,7,0.936,8,0.276,9,0.706,10,0.936,11,1.993,12,1.503,13,1.503,14,1.554,15,1.554,16,0.442,17,0.583,18,1.993,19,1.993,20,1.993,21,1.993,22,1.993,23,1.181,24,1.993,25,1.993,26,2.574,27,1.173,28,1.75,29,1.173,30,2.32,31,2.32,32,1.554,33,0.706,34,0.936,35,1.31,36,2.942,37,2.741,38,1.554,39,1.503,40,0.09,41,1.743,42,1.63,43,1.503,44,0.936,45,1.942,46,2.574,47,1.554,48,1.525,49,0.936,50,1.993,51,0.936,52,0.936,53,1.554,54,0.936,55,0.936,56,2.776,57,1.75,58,1.75,59,3.294,60,0.936,61,0.936,62,0.936,63,0.936,64,0.936,65,1.199,66,0.936,67,1.993,68,0.936,69,0.936,70,1.375,71,0.442,72,0.706,73,0.936,74,0.936,75,0.555,76,0.442,77,0.555,78,0.706,79,0.936,80,0.706,81,0.936,82,0.936,83,0.936,84,0.936,85,0.936,86,0.936,87,1.554,88,0.936,89,0.936,90,0.555,91,1.993,92,2.32,93,1.554,94,0.936,95,0.936,96,0.936,97,0.936,98,0.936,99,0.936,100,0.936,101,0.936,102,1.554,103,2.32,104,0.936,105,2.32,106,0.936,107,0.936,108,1.554,109,0.936,110,1.993,111,1.554,112,1.173,113,1.173,114,1.173,115,1.75,116,1.75,117,2.32,118,1.554,119,1.173,120,0.936,121,1.173,122,1.173,123,0.936,124,2.32,125,0.936,126,0.936,127,0.936,128,0.032,129,0.032]],["title/modules/AppModule.html",[130,1.65,131,1.031]],["body/modules/AppModule.html",[1,1.581,3,1.063,4,0.845,8,0.664,40,0.089,70,2.247,71,1.063,75,1.335,76,1.063,77,1.335,128,0.062,129,0.062,131,1.881,132,1.335,133,1.424,134,1.699,135,1.699,136,1.699,137,2.277,138,1.699,139,1.335,140,2.253,141,3.019,142,3.019,143,3.019,144,3.019,145,1.699,146,3.019,147,1.699,148,1.335,149,2.253,150,3.019,151,2.253,152,2.253]],["title/interfaces/TaskListI.html",[65,0.82,153,1.031]],["body/interfaces/TaskListI.html",[3,1.33,4,1.058,8,0.831,16,1.33,17,1.309,40,0.085,41,2.345,42,1.645,48,2.245,65,1.309,76,1.33,90,2.345,128,0.071,129,0.071,153,1.33,154,2.819,155,2.126,156,2.858]],["title/injectables/TaskService.html",[35,1.031,157,1.031]],["body/injectables/TaskService.html",[3,0.87,4,0.692,8,0.544,13,1.391,16,0.87,17,0.986,23,1.557,27,1.983,28,1.983,29,1.983,33,1.391,35,1.24,37,2.662,39,2.31,40,0.089,41,1.815,42,1.575,43,2.31,45,2.31,48,1.815,57,1.391,58,1.391,65,0.692,70,1.978,71,0.87,72,1.391,76,0.87,77,1.093,78,1.391,80,2.31,90,1.093,128,0.054,129,0.054,145,1.391,156,1.391,157,1.24,158,1.844,159,1.391,160,3.063,161,3.339,162,1.844,163,3.339,164,2.628,165,2.628,166,1.844,167,1.844,168,3.776,169,2.628,170,1.844,171,1.844,172,2.628,173,1.391,174,1.844,175,3.063,176,1.844,177,1.844,178,1.844,179,1.844]],["title/coverage.html",[180,2.232]],["body/coverage.html",[0,1.086,1,1.086,8,0.853,9,2.184,35,1.365,40,0.084,42,1.365,65,1.086,128,0.073,129,0.073,153,1.365,155,2.184,157,1.365,159,2.184,180,2.184,181,2.184,182,2.895,183,2.895,184,3.833,185,2.895,186,2.895,187,2.895,188,2.184,189,2.895,190,2.895]],["title/dependencies.html",[133,1.237,191,1.387]],["body/dependencies.html",[40,0.089,71,1.289,75,1.619,128,0.07,129,0.07,133,1.289,147,2.581,148,2.028,173,2.062,192,2.733,193,4.113,194,2.733,195,2.733,196,2.733,197,2.733,198,2.062,199,2.062,200,2.733,201,2.733,202,2.733,203,2.733,204,2.733,205,2.733]],["title/index.html",[16,0.867,206,1.387,207,1.387]],["body/index.html",[0,0.413,4,0.413,8,0.884,12,1.339,23,1.662,40,0.057,112,2.262,113,1.929,114,0.83,115,2.475,116,1.339,119,0.83,121,1.682,122,0.83,128,0.036,129,0.036,139,1.052,181,0.83,188,1.682,198,1.682,199,2.475,206,1.682,207,1.682,208,1.101,209,2.23,210,1.775,211,1.101,212,1.101,213,1.775,214,2.557,215,1.101,216,1.775,217,2.557,218,2.23,219,2.805,220,1.101,221,1.101,222,1.101,223,1.101,224,1.101,225,1.775,226,1.101,227,1.101,228,1.775,229,2.805,230,3.153,231,1.101,232,1.101,233,1.775,234,1.101,235,1.775,236,1.101,237,1.101,238,1.775,239,1.775,240,1.101,241,1.101,242,1.101,243,1.101,244,1.101,245,2.557,246,1.101,247,2.23,248,2.23,249,1.101,250,1.101,251,1.101,252,1.101,253,1.101,254,1.775,255,1.101,256,1.101,257,1.101,258,1.775,259,1.101,260,1.101,261,1.101,262,2.557,263,2.23,264,1.101,265,1.101,266,1.775,267,1.101,268,1.101,269,1.101,270,1.101,271,1.775,272,1.101,273,1.101,274,1.101,275,1.101,276,1.101,277,1.101,278,1.101,279,2.23,280,1.775,281,1.101,282,1.101,283,1.101,284,1.775,285,1.101,286,2.23,287,1.101,288,1.775,289,1.101,290,1.101,291,1.775,292,1.101,293,1.101,294,1.775,295,1.101,296,1.101,297,1.775,298,1.101,299,1.101,300,1.101,301,1.101,302,1.101,303,1.101,304,1.101,305,1.101,306,1.101,307,1.101,308,1.101,309,1.101,310,1.101,311,1.101,312,1.775,313,1.101,314,1.101,315,1.101,316,1.101,317,1.101,318,1.101,319,1.101,320,1.775,321,1.101,322,1.775,323,1.101,324,1.775,325,1.101,326,1.775,327,1.101,328,1.775,329,1.101,330,1.775,331,1.101,332,1.775,333,1.101,334,1.101,335,1.101,336,1.101,337,1.101,338,1.101,339,1.101,340,1.101,341,1.101,342,1.101,343,1.101,344,1.101,345,1.775,346,1.101,347,1.101,348,1.101,349,1.775,350,1.775,351,1.101,352,1.101,353,1.101,354,1.101,355,1.101,356,2.23,357,1.101,358,1.101,359,1.775,360,1.101,361,2.23,362,1.775,363,1.101,364,1.101,365,1.101,366,1.101,367,1.101,368,1.101,369,1.101,370,1.101,371,1.101,372,1.101,373,1.101,374,1.101,375,1.101,376,2.23,377,1.101,378,1.101,379,1.101,380,1.101,381,1.101,382,1.101,383,1.101,384,1.101,385,1.101,386,1.101,387,1.101,388,1.101,389,1.101,390,1.101,391,1.101,392,1.101]],["title/modules.html",[132,1.753]],["body/modules.html",[40,0.078,128,0.078,129,0.078,131,1.539,132,1.933,148,1.933,393,3.263,394,3.263,395,3.263]],["title/overview.html",[396,2.232]],["body/overview.html",[0,1.058,1,1.576,40,0.081,128,0.071,129,0.071,130,2.126,131,1.919,133,1.645,134,2.126,135,2.126,136,2.126,137,2.631,138,2.126,139,1.67,153,1.33,157,1.33,396,2.126,397,3.958]],["title/properties.html",[17,0.984,191,1.387]],["body/properties.html",[17,1.239,40,0.083,128,0.079,129,0.079,398,3.303,399,3.303]],["title/routes.html",[400,2.232]],["body/routes.html",[40,0.079,128,0.079,129,0.079,400,2.538]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":399,"title":{},"body":{"properties.html":{}}}],["0.11.6",{"_index":205,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["0/16",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":186,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":187,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":397,"title":{},"body":{"overview.html":{}}}],["12",{"_index":222,"title":{},"body":{"index.html":{}}}],["14.0.2",{"_index":193,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["3.6.11",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":278,"title":{},"body":{"index.html":{}}}],["4200",{"_index":272,"title":{},"body":{"index.html":{}}}],["6.14.x",{"_index":223,"title":{},"body":{"index.html":{}}}],["7.5.5",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":296,"title":{},"body":{"index.html":{}}}],["accepted",{"_index":337,"title":{},"body":{"index.html":{}}}],["accessing",{"_index":265,"title":{},"body":{"index.html":{}}}],["accordingly",{"_index":365,"title":{},"body":{"index.html":{}}}],["action",{"_index":280,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":324,"title":{},"body":{"index.html":{}}}],["adding",{"_index":355,"title":{},"body":{"index.html":{}}}],["additional",{"_index":379,"title":{},"body":{"index.html":{}}}],["addtask",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["addtask(task",{"_index":166,"title":{},"body":{"injectables/TaskService.html":{}}}],["addtask(task:any",{"_index":177,"title":{},"body":{"injectables/TaskService.html":{}}}],["again",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":292,"title":{},"body":{"index.html":{}}}],["angular",{"_index":214,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":192,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/TaskService.html":{}}}],["angular/compiler",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["api",{"_index":277,"title":{},"body":{"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.component",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":331,"title":{},"body":{"index.html":{}}}],["application",{"_index":212,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":131,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["assumptions",{"_index":374,"title":{},"body":{"index.html":{}}}],["attempting",{"_index":347,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":299,"title":{},"body":{"index.html":{}}}],["backend",{"_index":230,"title":{},"body":{"index.html":{}}}],["bar",{"_index":327,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":160,"title":{},"body":{"injectables/TaskService.html":{}}}],["basic",{"_index":314,"title":{},"body":{"index.html":{}}}],["beginning",{"_index":276,"title":{},"body":{"index.html":{}}}],["blue",{"_index":329,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["bootstrap",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":326,"title":{},"body":{"index.html":{}}}],["box",{"_index":339,"title":{},"body":{"index.html":{}}}],["browse",{"_index":395,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":330,"title":{},"body":{"index.html":{}}}],["cars",{"_index":264,"title":{},"body":{"index.html":{}}}],["cd",{"_index":226,"title":{},"body":{"index.html":{}}}],["challenge",{"_index":210,"title":{},"body":{"index.html":{}}}],["change",{"_index":301,"title":{},"body":{"index.html":{}}}],["changes",{"_index":312,"title":{},"body":{"index.html":{}}}],["check",{"_index":341,"title":{},"body":{"index.html":{}}}],["checked",{"_index":344,"title":{},"body":{"index.html":{}}}],["checking",{"_index":357,"title":{},"body":{"index.html":{}}}],["class",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/TaskService.html":{}}}],["click",{"_index":338,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":328,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":371,"title":{},"body":{"index.html":{}}}],["coding",{"_index":209,"title":{},"body":{"index.html":{}}}],["comments",{"_index":373,"title":{},"body":{"index.html":{}}}],["completed",{"_index":353,"title":{},"body":{"index.html":{}}}],["completetask",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{}}}],["configuration",{"_index":246,"title":{},"body":{"index.html":{}}}],["const",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["constructor(http",{"_index":162,"title":{},"body":{"injectables/TaskService.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["constructor(taskservice",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["containing",{"_index":388,"title":{},"body":{"index.html":{}}}],["contains",{"_index":261,"title":{},"body":{"index.html":{}}}],["contents",{"_index":389,"title":{},"body":{"index.html":{}}}],["copy",{"_index":308,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":180,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creating",{"_index":283,"title":{},"body":{"index.html":{}}}],["currently",{"_index":260,"title":{},"body":{"index.html":{}}}],["data",{"_index":263,"title":{},"body":{"index.html":{}}}],["database",{"_index":259,"title":{},"body":{"index.html":{}}}],["db.json",{"_index":258,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["delete",{"_index":345,"title":{},"body":{"index.html":{}}}],["deletetask",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["deletetask(id",{"_index":169,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask(idtask",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["deleting",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["demonstrates",{"_index":289,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":133,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":269,"title":{},"body":{"index.html":{}}}],["development",{"_index":295,"title":{},"body":{"index.html":{}}}],["directive",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["directory",{"_index":225,"title":{},"body":{"index.html":{}}}],["displayed",{"_index":350,"title":{},"body":{"index.html":{}}}],["displaymessage",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["diverts",{"_index":274,"title":{},"body":{"index.html":{}}}],["docstrings",{"_index":372,"title":{},"body":{"index.html":{}}}],["document",{"_index":370,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":181,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":343,"title":{},"body":{"index.html":{}}}],["element",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["email",{"_index":386,"title":{},"body":{"index.html":{}}}],["empty",{"_index":333,"title":{},"body":{"index.html":{}}}],["enter",{"_index":224,"title":{},"body":{"index.html":{}}}],["error",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["event",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target.checked",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["exact",{"_index":307,"title":{},"body":{"index.html":{}}}],["example",{"_index":262,"title":{},"body":{"index.html":{}}}],["exception",{"_index":366,"title":{},"body":{"index.html":{}}}],["expected",{"_index":317,"title":{},"body":{"index.html":{}}}],["explaining",{"_index":380,"title":{},"body":{"index.html":{}}}],["explorer",{"_index":243,"title":{},"body":{"index.html":{}}}],["export",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{}}}],["false",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["features",{"_index":323,"title":{},"body":{"index.html":{}}}],["feel",{"_index":377,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":302,"title":{},"body":{"index.html":{}}}],["find",{"_index":254,"title":{},"body":{"index.html":{}}}],["following",{"_index":322,"title":{},"body":{"index.html":{}}}],["formbuilder",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["formgroup",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":310,"title":{},"body":{"index.html":{}}}],["free",{"_index":378,"title":{},"body":{"index.html":{}}}],["functional",{"_index":321,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":318,"title":{},"body":{"index.html":{}}}],["gettasklist",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["gettasks",{"_index":161,"title":{},"body":{"injectables/TaskService.html":{}}}],["getting",{"_index":206,"title":{"index.html":{}},"body":{"index.html":{}}}],["hesitate",{"_index":249,"title":{},"body":{"index.html":{}}}],["hiring",{"_index":390,"title":{},"body":{"index.html":{}}}],["html",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["http",{"_index":165,"title":{},"body":{"injectables/TaskService.html":{}}}],["http://localhost:3000",{"_index":172,"title":{},"body":{"injectables/TaskService.html":{}}}],["http://localhost:4200",{"_index":237,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":163,"title":{},"body":{"injectables/TaskService.html":{}}}],["httpclientmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/typicode/json",{"_index":256,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/en/download",{"_index":220,"title":{},"body":{"index.html":{}}}],["https://ycharts",{"_index":304,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":354,"title":{},"body":{"index.html":{}}}],["id",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{}}}],["identifier",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["idtask",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["implemented",{"_index":290,"title":{},"body":{"index.html":{}}}],["implementing",{"_index":211,"title":{},"body":{"index.html":{}}}],["import",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/TaskService.html":{}}}],["imports",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{}}}],["initialize",{"_index":288,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":157,"title":{"injectables/TaskService.html":{}},"body":{"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":158,"title":{},"body":{"injectables/TaskService.html":{}}}],["input",{"_index":336,"title":{},"body":{"index.html":{}}}],["inspect",{"_index":306,"title":{},"body":{"index.html":{}}}],["install",{"_index":217,"title":{},"body":{"index.html":{}}}],["installation",{"_index":216,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":298,"title":{},"body":{"index.html":{}}}],["interface",{"_index":153,"title":{"interfaces/TaskListI.html":{}},"body":{"interfaces/TaskListI.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":154,"title":{},"body":{"interfaces/TaskListI.html":{}}}],["internet",{"_index":242,"title":{},"body":{"index.html":{}}}],["interview.netlify.app",{"_index":305,"title":{},"body":{"index.html":{}}}],["item",{"_index":356,"title":{},"body":{"index.html":{}}}],["jsdoc",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":198,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["left",{"_index":340,"title":{},"body":{"index.html":{}}}],["legend",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["level",{"_index":316,"title":{},"body":{"index.html":{}}}],["list",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["list/src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["list/src/app/app.component.ts:11",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:12",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:13",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:14",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:15",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:16",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:17",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:18",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:19",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:29",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:33",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:47",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:64",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.component.ts:68",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["list/src/app/app.module.ts",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["list/src/interfaces/tasklist.interface.ts",{"_index":155,"title":{},"body":{"interfaces/TaskListI.html":{},"coverage.html":{}}}],["list/src/services/task.service.ts",{"_index":159,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["list/src/services/task.service.ts:10",{"_index":164,"title":{},"body":{"injectables/TaskService.html":{}}}],["list/src/services/task.service.ts:14",{"_index":171,"title":{},"body":{"injectables/TaskService.html":{}}}],["list/src/services/task.service.ts:18",{"_index":167,"title":{},"body":{"injectables/TaskService.html":{}}}],["list/src/services/task.service.ts:22",{"_index":170,"title":{},"body":{"injectables/TaskService.html":{}}}],["load",{"_index":360,"title":{},"body":{"index.html":{}}}],["localhost:3000/cars",{"_index":267,"title":{},"body":{"index.html":{}}}],["localhost:3000/cars/2",{"_index":268,"title":{},"body":{"index.html":{}}}],["localhost:4200/api/cars",{"_index":281,"title":{},"body":{"index.html":{}}}],["mac",{"_index":234,"title":{},"body":{"index.html":{}}}],["macos",{"_index":232,"title":{},"body":{"index.html":{}}}],["made",{"_index":313,"title":{},"body":{"index.html":{}}}],["make",{"_index":320,"title":{},"body":{"index.html":{}}}],["making",{"_index":375,"title":{},"body":{"index.html":{}}}],["manager",{"_index":391,"title":{},"body":{"index.html":{}}}],["many",{"_index":293,"title":{},"body":{"index.html":{}}}],["matching",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["materials",{"_index":291,"title":{},"body":{"index.html":{}}}],["message",{"_index":349,"title":{},"body":{"index.html":{}}}],["messages",{"_index":367,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["missing",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["missingmessage",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["module",{"_index":130,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":132,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{}}}],["need",{"_index":294,"title":{},"body":{"index.html":{}}}],["new",{"_index":188,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ngmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["node.js",{"_index":218,"title":{},"body":{"index.html":{}}}],["note",{"_index":239,"title":{},"body":{"index.html":{}}}],["notes",{"_index":368,"title":{},"body":{"index.html":{}}}],["npm",{"_index":219,"title":{},"body":{"index.html":{}}}],["number",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{}}}],["observable",{"_index":168,"title":{},"body":{"injectables/TaskService.html":{}}}],["official",{"_index":255,"title":{},"body":{"index.html":{}}}],["oncheckboxchange",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["oncheckboxchange(event",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["otherwise",{"_index":382,"title":{},"body":{"index.html":{}}}],["out",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":396,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":191,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":228,"title":{},"body":{"index.html":{}}}],["page",{"_index":359,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["please",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["port",{"_index":271,"title":{},"body":{"index.html":{}}}],["powered",{"_index":253,"title":{},"body":{"index.html":{}}}],["private",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["project",{"_index":286,"title":{},"body":{"index.html":{}}}],["properties",{"_index":17,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{},"properties.html":{}}}],["provided",{"_index":245,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":174,"title":{},"body":{"injectables/TaskService.html":{}}}],["providers",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["proxy.conf.json",{"_index":273,"title":{},"body":{"index.html":{}}}],["reach",{"_index":250,"title":{},"body":{"index.html":{}}}],["reached",{"_index":392,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["recommended",{"_index":221,"title":{},"body":{"index.html":{}}}],["reload",{"_index":300,"title":{},"body":{"index.html":{}}}],["remain",{"_index":351,"title":{},"body":{"index.html":{}}}],["reset",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsibility",{"_index":319,"title":{},"body":{"index.html":{}}}],["responsible",{"_index":282,"title":{},"body":{"index.html":{}}}],["result",{"_index":348,"title":{},"body":{"index.html":{}}}],["results",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":175,"title":{},"body":{"injectables/TaskService.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["right",{"_index":346,"title":{},"body":{"index.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["routes",{"_index":400,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":229,"title":{},"body":{"index.html":{}}}],["running",{"_index":248,"title":{},"body":{"index.html":{}}}],["runs",{"_index":270,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":173,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["schema",{"_index":284,"title":{},"body":{"index.html":{}}}],["scss",{"_index":309,"title":{},"body":{"index.html":{}}}],["section",{"_index":384,"title":{},"body":{"index.html":{}}}],["see",{"_index":279,"title":{},"body":{"index.html":{}}}],["selectedtask",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["server",{"_index":199,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["servers",{"_index":231,"title":{},"body":{"index.html":{}}}],["set",{"_index":238,"title":{},"body":{"index.html":{}}}],["setup",{"_index":240,"title":{},"body":{"index.html":{}}}],["simple",{"_index":252,"title":{},"body":{"index.html":{}}}],["sizetaskarray",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["skeleton",{"_index":303,"title":{},"body":{"index.html":{}}}],["solution.md",{"_index":376,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["space",{"_index":335,"title":{},"body":{"index.html":{}}}],["specified",{"_index":383,"title":{},"body":{"index.html":{}}}],["src/interfaces/tasklist.interface",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["src/services/task.service",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["src/styles.scss",{"_index":311,"title":{},"body":{"index.html":{}}}],["start",{"_index":233,"title":{},"body":{"index.html":{}}}],["started",{"_index":207,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":361,"title":{},"body":{"index.html":{}}}],["statements",{"_index":183,"title":{},"body":{"coverage.html":{}}}],["steps",{"_index":297,"title":{},"body":{"index.html":{}}}],["stored",{"_index":362,"title":{},"body":{"index.html":{}}}],["string",{"_index":156,"title":{},"body":{"interfaces/TaskListI.html":{},"injectables/TaskService.html":{}}}],["submission",{"_index":287,"title":{},"body":{"index.html":{}}}],["submit",{"_index":385,"title":{},"body":{"index.html":{}}}],["suits",{"_index":285,"title":{},"body":{"index.html":{}}}],["support",{"_index":393,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":369,"title":{},"body":{"index.html":{}}}],["svg",{"_index":394,"title":{},"body":{"modules.html":{}}}],["table",{"_index":190,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":189,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["task.id",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["task.name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["taskarray",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["taskarray.length",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["taskarray.push",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["taskform",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["tasklist.foreach((task",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["tasklistdata",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["tasklisti",{"_index":65,"title":{"interfaces/TaskListI.html":{}},"body":{"components/AppComponent.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["taskname",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["taskservice",{"_index":35,"title":{"injectables/TaskService.html":{}},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["this.completetask",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["this.displaymessage",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["this.formbuilder.group",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.gettasklist",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.delete(`${this.baseurl}task/${id",{"_index":179,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get(`${this.baseurl}task",{"_index":176,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.post(`${this.baseurl}task",{"_index":178,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.missingmessage",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sizetaskarray",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["this.task",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["this.taskform",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.taskform.reset",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.taskform.valid",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["this.taskform.value",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tasklistdata",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tasklistdata.filter(task",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tasklistdata.foreach((task",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tasklistdata.push(newtask",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["this.taskname",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["this.taskservice.addtask(this.task).subscribe((newtask",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["this.taskservice.deletetask(idtask).subscribe",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["this.taskservice.gettasks().subscribe((tasklist",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":315,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["trouble",{"_index":244,"title":{},"body":{"index.html":{}}}],["true",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["try",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["tslib",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TaskListI.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["typescript",{"_index":215,"title":{},"body":{"index.html":{}}}],["typing",{"_index":325,"title":{},"body":{"index.html":{}}}],["uncheck",{"_index":342,"title":{},"body":{"index.html":{}}}],["unchecked",{"_index":332,"title":{},"body":{"index.html":{}}}],["unchecking",{"_index":358,"title":{},"body":{"index.html":{}}}],["unless",{"_index":381,"title":{},"body":{"index.html":{}}}],["until",{"_index":352,"title":{},"body":{"index.html":{}}}],["up",{"_index":247,"title":{},"body":{"index.html":{}}}],["update",{"_index":364,"title":{},"body":{"index.html":{}}}],["urls",{"_index":275,"title":{},"body":{"index.html":{}}}],["used",{"_index":363,"title":{},"body":{"index.html":{}}}],["uses",{"_index":257,"title":{},"body":{"index.html":{}}}],["using",{"_index":213,"title":{},"body":{"index.html":{}}}],["validators",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["validators.required",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["var",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["version",{"_index":398,"title":{},"body":{"properties.html":{}}}],["victor",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["visit",{"_index":236,"title":{},"body":{"index.html":{}}}],["visiting",{"_index":266,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["we've",{"_index":251,"title":{},"body":{"index.html":{}}}],["white",{"_index":334,"title":{},"body":{"index.html":{}}}],["windows",{"_index":235,"title":{},"body":{"index.html":{}}}],["work",{"_index":241,"title":{},"body":{"index.html":{}}}],["x",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ycharts",{"_index":208,"title":{},"body":{"index.html":{}}}],["ycharts_app_interview",{"_index":227,"title":{},"body":{"index.html":{}}}],["zip",{"_index":387,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    to-do-list/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                completeTask\n                            \n                            \n                                displayMessage\n                            \n                            \n                                missingMessage\n                            \n                            \n                                selectedTask\n                            \n                            \n                                sizeTaskArray\n                            \n                            \n                                task\n                            \n                            \n                                taskForm\n                            \n                            \n                                taskListData\n                            \n                            \n                                taskName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTaskList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCheckBoxChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in to-do-list/src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask()\n                \n            \n\n\n            \n                \n                    Defined in to-do-list/src/app/app.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(idTask: number)\n                \n            \n\n\n            \n                \n                    Defined in to-do-list/src/app/app.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTask\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskList\n                        \n                    \n                \n            \n            \n                \ngetTaskList()\n                \n            \n\n\n            \n                \n                    Defined in to-do-list/src/app/app.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in to-do-list/src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCheckBoxChange\n                        \n                    \n                \n            \n            \n                \nonCheckBoxChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in to-do-list/src/app/app.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        completeTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        missingMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sizeTaskArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskListI\n\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskListData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskListI[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TaskListI } from 'src/interfaces/taskList.interface';\nimport { TaskService } from 'src/services/task.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n})\nexport class AppComponent {\n    taskForm: FormGroup;\n    task: TaskListI;\n    sizeTaskArray: number;\n    taskName: any;\n    completeTask: boolean = false;\n    selectedTask: any;\n    displayMessage: boolean = false;\n    missingMessage: boolean = false;\n    taskListData: TaskListI[] = [];\n\n\n    constructor(private readonly taskService: TaskService,\n        private formBuilder: FormBuilder) {\n        this.taskForm = this.formBuilder.group({\n            name: ['', Validators.required]\n        });\n    }\n\n    ngOnInit() {\n        this.getTaskList();\n    }\n\n    getTaskList() {\n        this.taskService.getTasks().subscribe((taskList: any) => {\n            const taskArray: TaskListI[] = [];\n            taskList.forEach((task: TaskListI) => {\n                taskArray.push({\n                    id: task.id,\n                    name: task.name\n                });\n            });\n            this.taskListData = taskArray;\n            this.sizeTaskArray = taskArray.length;\n        });\n    }\n\n    addTask() {\n        if (this.taskForm.valid) {\n            this.task = this.taskForm.value;\n            this.taskService.addTask(this.task).subscribe((newTask: TaskListI) => {\n                this.taskListData.push(newTask);\n                this.taskForm.reset();\n            });\n            this.missingMessage = false;\n        } else {\n            this.missingMessage = true;\n        }\n\n    }\n\n\n\n\n    onCheckBoxChange(event: any) {\n        event.target.checked ? this.completeTask = true : this.completeTask = false\n    }\n\n    deleteTask(idTask: number) {\n        if (this.completeTask === true) {\n            this.taskService.deleteTask(idTask).subscribe(() => {\n                this.taskListData = this.taskListData.filter(task => task.id !== idTask);\n                this.displayMessage = false;\n            });\n            this.completeTask = false;\n        } else {\n            this.displayMessage = true;\n            this.taskListData.forEach((task: TaskListI) => {\n                if (task.id === idTask) {\n                    this.taskName = task.name;\n                }\n            }\n            );\n        }\n    }\n}\n    \n\n    \n        \n  \n    Victor To-Do List\n    Error deleting “{{this.taskName}}” Please try again.\n    Missing TaskName, Please try again. \n    \n      \n        \n          \n            {{task.name}}\n          \n          X\n        \n      \n    \n    \n      \n        \n        +\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Victor To-Do List    Error deleting “{{this.taskName}}” Please try again.    Missing TaskName, Please try again.                                         {{task.name}}                    X                                            +            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            to-do-list/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskListI.html":{"url":"interfaces/TaskListI.html","title":"interface - TaskListI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskListI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            to-do-list/src/interfaces/taskList.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TaskListI {\n    id:       number;\n    name:     string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            to-do-list/src/services/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTasks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in to-do-list/src/services/task.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: any)\n                \n            \n\n\n            \n                \n                    Defined in to-do-list/src/services/task.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: number)\n                \n            \n\n\n            \n                \n                    Defined in to-do-list/src/services/task.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n            \n                \n                    Defined in to-do-list/src/services/task.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/'\n                    \n                \n                    \n                        \n                                Defined in to-do-list/src/services/task.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskListI } from 'src/interfaces/taskList.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private baseUrl = 'http://localhost:3000/';\n\n  constructor(private http: HttpClient) { }\n\n  getTasks(): Observable {\n    return this.http.get(`${this.baseUrl}task`);\n  }\n\n  addTask(task:any): Observable {\n    return this.http.post(`${this.baseUrl}task`, task );\n  }\n\n  deleteTask(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}task/${id}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                to-do-list/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                to-do-list/src/interfaces/taskList.interface.ts\n            \n            interface\n            TaskListI\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                to-do-list/src/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^14.0.2\n        \n            @angular/compiler : ^14.0.2\n        \n            @angular/core : ^14.0.2\n        \n            @angular/forms : ^14.0.2\n        \n            @angular/platform-browser : ^14.0.2\n        \n            @angular/platform-browser-dynamic : ^14.0.2\n        \n            jsdoc : ^3.6.11\n        \n            json-server : ^0.17.0\n        \n            rxjs : ~7.5.5\n        \n            tslib : ^2.4.0\n        \n            zone.js : ~0.11.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nYCharts Coding Challenge\nFor this coding challenge, you will be implementing a to-do list application using Angular and TypeScript. \nInstallation / Getting Started\n\nInstall Node.js and npm from https://nodejs.org/en/download/. It is recommended to have Node.js 12+ and npm 6.14.x\nEnter the directory: cd ycharts_app_interview\nInstall Node.js packages: npm install\nRun the backend and Angular servers:\nmacOS: npm run start-mac\nWindows: npm run start-windows\nVisit http://localhost:4200/ and you should be all set to get started coding! Please note that this setup does\nnot work for Internet Explorer.\nIf you have any trouble getting our provided configuration up and running please do not hesitate to reach out.\n\nBackend Server\nWe've provided a simple backend server, powered by json-server. You can find the official documentation at \nhttps://github.com/typicode/json-server. json-server uses the db.json file as a database, which currently contains \nexample data about cars. Try accessing the example data by visiting localhost:3000/cars or localhost:3000/cars/2.\nSince the Angular dev server runs on port 4200, we also set up a proxy.conf.json file that diverts any urls beginning\nwith /api to the backend server running on port 3000. To see this in action, try visiting localhost:4200/api/cars.\nYou will be responsible for creating a JSON schema that suits the to-do list project. In your project submission,\nplease initialize db.json with data that demonstrates the schema you have implemented.\nMaterials Provided\nWe have already provided you with many of the materials you will need to get up and running:\n\nA development server. See the above steps for instructions how to run it. The app will automatically reload \n if you change any of the source files.\nSkeleton HTML, which you can find at https://ycharts-interview.netlify.app/. Please inspect element to get an \n exact copy of the HTML.\nSCSS, found in src/styles.scss. No changes need to be made to this file\nA basic top level Angular component\n\nExpected Functionality\nYour responsibility is to make this app functional with the following features:\n\nYou should be able to add a new task to the to-do list by typing into the bottom bar, and clicking the blue + \nbutton. The new task should appear at the bottom of the to-do list, and it should be unchecked. \nEmpty or white space input should not be accepted.\nYou should be able to click the box on the left to check and uncheck each task.\nIf a task is checked, you should be able to delete it from the list by clicking its X button on the right.\nIf a task is unchecked, attempting to delete it from the list should result in an error. \nSee the example HTML for an example of an error message that should be displayed.\nThe error message should remain displayed until any other action is completed\n(i.e. adding a new item, checking or unchecking an item, or deleting an item).\nOn page load, the state stored in the backend should be used to initialize the page. Any changes to the state\nshould update the backend accordingly. The exception to this is error messages, which should not be stored in \nthe backend.\n\nOther Notes\n\nPlease make sure to document your code using docstrings and comments.\nPlease state any assumptions you are making in the SOLUTION.md file.\nPlease feel free to install any additional packages. Just add a note in SOLUTION.md explaining why!\nUnless otherwise specified in the SOLUTION.md file, we will be following the steps in the \n  Installation / Getting Started section to run your project.\n\nHow to Submit\n\nPlease email a ZIP file containing the contents of this directory to the hiring manager who reached out to you.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
